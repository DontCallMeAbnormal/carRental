<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"      
 "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="cn.tongRenCollege.dao.mapper.AdmMapper">

	<!-- 通过Adm包含的账号/电话\密码信息查询数据库,返回包含完整信息的adm -->
	<select id="getAdm" parameterType="Adm" resultType="Adm">
		SELECT * FROM adm WHERE (adm_name=#{adm_name} and adm_pwd=#{adm_pwd})
		 OR (adm_phone=#{adm_phone} and adm_pwd=#{adm_pwd} );
	</select>
	
	
	<!-- 添加 -->
		<!-- 添加员工 -->
		<insert id="addEmployee" parameterType="Employee">
			INSERT INTO `employee` (`employee_id`, `employee_name`, `employee_phone`, `employee_pwd`) 
			VALUES (#{employee_id}, #{employee_name}, #{employee_phone}, #{employee_pwd});
		</insert>
		
		<!-- 添加车辆信息 -->
		<insert id="addBase" parameterType="Base">
			INSERT INTO `base` (`base_id`, `base_photo`, `base_type`, `base_brand`, `base_model`, `base_produced`, `base_displacement`, `base_speed`) 
			VALUES (#{base_id}, #{base_photo}, #{base_type}, #{base_brand}, #{base_model}, #{base_produced}, #{base_displacement}, #{base_speed});
		</insert>
		
		
		<!-- 添加入库车辆 -->
		<insert id="addVehicle" parameterType="Vehicle">
			INSERT INTO `vehicle` (`vehicle_id`, `vehicle_base_id`, `vehicle_employee_id`, `vehicle_price`, `vehicle_describe`, `vehicle_mileage`, `vehicle_condition`, `vehicle_state`) 
			VALUES (#{vehicle_id}, #{vehicle_base_id}, #{vehicle_employee_id}, #{vehicle_price}, #{vehicle_describe}, #{vehicle_mileage}, #{vehicle_condition}, #{vehicle_state});
		</insert>
				
		
	<!-- /添加 -->
	
	
	
	<!-- 删除 -->
		<!-- 删除员工 -->
		<delete id="removeEmployeeById" parameterType="String">
			DELETE FROM `employee` WHERE (`employee_id`=#{value});
		</delete>
		
		<!-- 删除车辆信息 -->
		<delete id="removeBaseById" parameterType="String">
			DELETE FROM `base` WHERE (`base_id`=#{value});
		</delete>
		
		
		<!-- 删除库中车辆 -->
		<delete id="removeVehicleById" parameterType="String">
			DELETE FROM `vehicle` WHERE (`vehicle_id`=#{value});
		</delete>
		
		
	<!-- /删除 -->
	
	
	
	<!-- 	查询		 -->
	<sql id="queryEmployeeColumn">
		employee_id,employee_name,employee_phone,employee_state
	</sql>
	<sql id="queryUserColumn">
		user_id,user_name,user_phone
	</sql>
	
	
		<!-- 员工 -->
		<select id="getEmployeeById" parameterType="String" resultType="Employee">
				SELECT <include refid="queryEmployeeColumn"/> FROM `employee` WHERE employee_id=#{value};
		</select>
		<select id="queryEmployees" resultType="Employee">
				SELECT <include refid="queryEmployeeColumn"/> FROM `employee`;
		</select>
		<select id="queryEmployeesByemployee" parameterType="Employee" resultType="Employee">
				SELECT <include refid="queryEmployeeColumn"/> FROM `employee`
				<where>
					<if test="employee_name != null and employee_name != ''">
						and employee_name=#{employee_name}
					</if>
					<if test="employee_phone != null and employee_phone != ''">
						and employee_phone=#{employee_phone}
					</if>
					<if test="employee_state != null and employee_state != ''">
						and employee_state=#{employee_state}
					</if>
					<if test="employee_id != null and employee_id != ''">
						and employee_id=#{employee_id}
					</if>
				</where>
				
		</select>
		
		<!-- 用户 -->
		
		<select id="getUserById" parameterType="String" resultType="User">
				SELECT <include refid="queryUserColumn"/> FROM `user` WHERE user_id=#{value};
		</select>
		<select id="queryUserByUser" parameterType="User" resultType="User">
				SELECT <include refid="queryUserColumn"/> FROM `user`
				<where>
					<if test="user_id != null and user_id != '' ">
						and user_id=#{user_id}
					</if>
					<if test="user_name != null and user_name != '' ">
						and user_name=#{user_name}
					</if>
					<if test="user_phone != null and user_phone != '' ">
						and user_phone=#{user_phone}
					</if>
				</where>
		</select>
		
		<select id="queryUsers" resultType="User">
				SELECT <include refid="queryUserColumn"/> FROM `user`;
		</select>
		
		<!-- 车辆信息 -->
		<select id="getBaseById" parameterType="String" resultType="Base">
				SELECT * FROM `base` WHERE base_id=#{value};
		</select>
		<select id="queryBases" resultType="Base">
				SELECT * FROM `base`;
		</select>
		<select id="queryBasesByType" parameterType="String" resultType="Base">
				SELECT * FROM `base` WHERE base_type=#{value};
		</select>
		<select id="queryBasesByBrand" parameterType="String" resultType="Base">
				SELECT * FROM `base` WHERE base_brand=#{value};
		</select>
		<select id="queryByDateAfter" parameterType="java.sql.Date" resultType="Base">
				SELECT * FROM `base` WHERE base_produced >= #{value};
		</select>
		<select id="queryByDisplacementMin" parameterType="double" resultType="Base">
				SELECT * FROM `base` WHERE base_displacement >= #{value} ORDER BY base_displacement DESC;
		</select>
		<select id="queryByDisplacementMax" parameterType="double" resultType="Base">
				SELECT * FROM `base` WHERE base_displacement &lt;= #{value} ORDER BY base_displacement ASC;
		</select>
		
		<select id="queryByDisplacement" parameterType="double" resultType="Base">
				SELECT * FROM `base` WHERE base_displacement >= #{arg0} AND base_displacement &lt;= #{arg1} ORDER BY base_displacement DESC;
		</select>
		
		<select id="queryBySpeedMin" parameterType="double" resultType="Base">
				SELECT * FROM `base` WHERE base_speed >= #{value} ORDER BY base_displacement DESC;
		</select>
		<select id="queryBySpeedMax" parameterType="double" resultType="Base">
				SELECT * FROM `base` WHERE base_speed &lt;= #{value} ORDER BY base_displacement ASC;
		</select>
		<select id="queryBySpeed" parameterType="double" resultType="Base">
				SELECT * FROM `base` WHERE base_speed >= #{arg0} AND base_displacement &lt;= #{arg1} ORDER BY base_displacement DESC;
		</select>
		
		<select id="queryBase" parameterType="Base" resultType="Base">
			SELECT * FROM `base`
			<where>
				<if test="base_id != null and base_id != '' ">
					and base_id=#{base_id}
				</if>
				<if test="base_type != null and base_type != '' ">
					and base_type=#{base_type}
				</if>
				<if test="base_brand != null and base_brand != '' ">
					and base_brand=#{base_brand}
				</if>
				<if test="base_model != null and base_model != '' ">
					and base_model=#{base_model}
				</if>
				<if test="base_produced != null ">
					and base_produced=#{base_produced}
				</if>
				<if test="base_displacement != null and base_displacement != 0 ">
					and base_displacement=#{base_displacement}
				</if>
				<if test="base_speed != null and base_speed != 0 ">
					and base_speed=#{base_speed}
				</if>
			</where>
		</select>
		
		
		<select id="queryOrderByDate" parameterType="java.util.Date" resultType="Order">
				SELECT * FROM `order` WHERE order_id >= #{value};
		</select>
		
		<select id="queryOrderByOneDay" parameterType="String" resultType="Order">
				SELECT * FROM `order` WHERE order_id like '${value}%';
		</select>
		
		<select id="queryOrderByUserId" parameterType="String" resultType="Order">
				SELECT * FROM `order` WHERE order_user_id=#{value};
		</select>
		<select id="queryOrderByUserPhone" parameterType="String" resultType="Order">
				SELECT o.* FROM `user` u INNER JOIN `order` o ON u.user_phone=#{value};
		</select>
		<select id="queryOrderByEmployeeId" parameterType="String" resultType="Order">
				SELECT o.* FROM vehicle v INNER JOIN `order` o ON v.vehicle_employee_id=#{value};
		</select>
		
		
		<sql id="OrderdetailColumnName">
			o.order_id,o.order_price,o.order_quantity,
			o.order_startDate,o.order_state,o.order_stopDate,
			o.order_user_id,u.user_name,u.user_phone
		</sql>
		
		<select id="queryOrderDetail" parameterType="Orderdetail"  resultMap="Orderdetail">
			SELECT * FROM
			(SELECT * FROM
						(SELECT * FROM `order` o INNER JOIN 
						(
							SELECT *  FROM vehicle v INNER JOIN base b ON v.vehicle_base_id=b.base_id
						
						) AS v
						 ON o.order_vehicle_id=v.vehicle_id ) AS vo INNER JOIN `user` u ON u.user_id=vo.order_user_id) 
			AS ovu 
			INNER JOIN employee e
			ON e.employee_id = ovu.vehicle_employee_id 
			<where>
				<if test="order_id != null ">
					and order_id=#{order_id}
				</if>
				<if test="order_state != null and order_state != '' ">
					and order_state=#{order_state}
				</if>
				<if test="user != null and user.user_name != null and user.user_name != '' ">
					and user_name=#{user.user_name}
				</if>
				<if test="order_user_id != null and order_user_id != null and order_user_id != '' ">
					and order_user_id=#{order_user_id}
				</if>
				<if test="employee != null and employee.employee_name != null and employee.employee_name != '' ">
					and employee_name=#{employee.employee_name}
				</if>
				<if test="employee != null and employee.employee_id != null and employee.employee_id != '' ">
					and employee_id=#{employee.employee_id}
				</if>
			</where>
			ORDER BY order_id DESC;
		</select>
		
		<resultMap type="Orderdetail" id="Orderdetail">
			<id column="order_id"  property="order_id"  />
			<result column="order_price" property="order_price"/>
			<result column="order_state" property="order_state"/>
			<result column="order_vehicle_id" property="order_vehicle_id"/>
			<result column="order_startDate" property="order_startDate"/>
			<result column="order_stopDate" property="order_stopDate"/>
			<result column="order_quantity" property="order_quantity"/>
			<association property="user">
				<id column="order_user_id" property="user_id"/>
				<result column="user_name" property="user_name" />
				<result column="user_phone" property="user_phone"/>
			</association>
			<association property="employee">
				<id column="employee_id" property="employee_id"/>
				<result column="employee_name" property="employee_name" />
				<result column="employee_phone" property="employee_phone"/>
			</association>
			<association property="vehicleFull" javaType="VehicleFull" resultMap="VehicleFull"/>
		</resultMap>
		
		
		<select id="getVehicleFullById" parameterType="String"	resultMap="VehicleFull">
			<include refid="getVehicleFullByIdsql"/>
		</select>
		<sql id="getVehicleFullByIdsql">
			SELECT * FROM `vehicle` v INNER JOIN `base` b ON v.vehicle_base_id=b.base_id WHERE v.vehicle_id=#{value};
		</sql>
		
		
		<select id="queryVehicleFull" parameterType="VehicleFull" resultMap="VehicleFull">
			SELECT * FROM `vehicle` v INNER JOIN `base` b ON v.vehicle_base_id=b.base_id
			<where>
				<if test="base != null">
					<if test="base.base_id != null and base.base_id != '' ">
						and b.base_id=#{base.base_id}
					</if>
					<if test="base.base_type != null and base.base_type != '' ">
						and b.base_type=#{base.base_type}
					</if>
					<if test="base.base_brand != null and base.base_brand != '' ">
						and b.base_brand=#{base.base_brand}
					</if>
					<if test="base.base_model != null and base.base_model != '' ">
						and b.base_model=#{base.base_model}
					</if>
					<if test="base.base_produced != null ">
						and b.base_produced=#{base.base_produced}
					</if>
					<if test="base.base_displacement != null and base.base_displacement != 0 ">
						and b.base_displacement=#{base.base_displacement}
					</if>
					<if test="base.base_speed != null and base.base_speed != 0 ">
						and b.base_speed=#{base.base_speed}
					</if>
				</if>
				
				<if test="vehicle_id != null and vehicle_id != '' ">
					and v.vehicle_id=#{vehicle_id}
				</if>
				<if test="vehicle_base_id != null and vehicle_base_id != '' ">
					and v.vehicle_base_id=#{vehicle_base_id}
				</if>
				<if test="vehicle_employee_id != null and vehicle_employee_id != '' ">
					and v.vehicle_employee_id=#{vehicle_employee_id}
				</if>
				<if test="vehicle_price != null and vehicle_price > 0">
					and v.vehicle_price=#{vehicle_price}
				</if>
				<if test="vehicle_mileage != null and vehicle_mileage > 0">
					and v.vehicle_mileage=#{vehicle_mileage}
				</if>
				<if test="vehicle_condition != null and vehicle_condition > 0 and vehicle_condition lt 10 ">
					and v.vehicle_condition=#{vehicle_condition}
				</if>
				<if test="vehicle_state != null ">
					and v.vehicle_state=#{vehicle_state}
				</if>
			</where>
		</select>
		
		
		<sql id="queryVehicleFullAllSql">
			<!-- arg0:排序的字段名     arg1:DESC/ASC -->
			SELECT * FROM `vehicle` v INNER JOIN `base` b ON v.vehicle_base_id=b.base_id 
			<trim>
				<if test="arg0 != null and arg0 != '' and (arg1 == 'DESC' or arg1 == 'ASC' )">
					ORDER BY ${arg0} ${arg1};
				</if>
			</trim>
		</sql>
		<select id="queryVehicleFullAll" parameterType="String" resultMap="VehicleFull">
			<include refid="queryVehicleFullAllSql"/>
		</select>
		
		<resultMap type="VehicleFull" id="VehicleFull">
			<id column="vehicle_id" property="vehicle_id"/>
			<result	column="vehicle_base_id" property="vehicle_base_id"/>
			<result	column="vehicle_employee_id" property="vehicle_employee_id"/>
			<result	column="vehicle_price" property="vehicle_price"/>
			<result	column="vehicle_describe" property="vehicle_describe"/>
			<result	column="vehicle_mileage" property="vehicle_mileage"/>
			<result	column="vehicle_condition" property="vehicle_condition"/>
			<result	column="vehicle_state" property="vehicle_state"/>
			<association property="base" javaType="Base">
				<id column="base_id" property="base_id" />
				<result	column="base_photo" property="base_photo"/>
				<result	column="base_type" property="base_type"/>
				<result	column="base_brand" property="base_brand"/>
				<result	column="base_model" property="base_model"/>
				<result	column="base_produced" property="base_produced"/>
				<result	column="base_displacement" property="base_displacement"/>
				<result	column="base_speed" property="base_speed"/>
			</association>
		</resultMap>
		
	<!-- 	/查询	 -->
	
	
	<!-- 修改 -->
	<update id="updataBase" parameterType="Base" >
		UPDATE `base`
			<trim prefix="set" suffixOverrides=",">
                <if test="base_photo != null">base_photo=#{base_photo},</if>
                <if test="base_type != null and base_type != '' ">base_type=#{base_type},</if>
                <if test="base_brand != null">base_brand=#{base_brand},</if>
                <if test="base_model != null">base_model=#{base_model},</if>
                <if test="base_produced != null">base_produced=#{base_produced},</if>
                <if test="base_displacement != null and base_displacement > 0">base_displacement=#{base_displacement},</if>
				<if test="base_speed != null and base_speed > 0">base_speed=#{base_speed},</if>
            </trim>
		WHERE (`base_id`= #{base_id});
	</update>
	
	
	<update id="updataOrder" parameterType="Order" >
		UPDATE `order`
			<trim prefix="set" suffixOverrides=",">
                <if test="order_vehicle_id != null">order_vehicle_id=#{order_vehicle_id},</if>
                <if test="order_user_id != null ">order_user_id=#{order_user_id},</if>
                <if test="order_price != null and order_price > 0">order_price=#{order_price},</if>
                <if test="order_state != null">order_state=#{order_state},</if>
                <if test="order_startDate != null">order_startDate=#{order_startDate},</if>
                <if test="order_stopDate != null and order_stopDate > order_startDate">order_stopDate=#{order_stopDate},</if>
				<if test="order_quantity != null and order_quantity > 0">order_quantity=#{order_quantity},</if>
            </trim>
		WHERE (`order_id`= #{order_id});
	</update>
	
	<update id="updataVehicle" parameterType="Vehicle" >
		UPDATE `vehicle`
			<trim prefix="set" suffixOverrides=",">
                <if test="vehicle_base_id != null">vehicle_base_id=#{vehicle_base_id},</if>
                <if test="vehicle_employee_id != null">vehicle_employee_id=#{vehicle_employee_id},</if>
                <if test="vehicle_price != null and vehicle_price > 0">vehicle_price=#{vehicle_price},</if>
                <if test="vehicle_describe != null ">vehicle_describe=#{vehicle_describe},</if>
                <if test="vehicle_mileage != null and vehicle_mileage > 0">vehicle_mileage=#{vehicle_mileage},</if>
                <if test="vehicle_condition != null and vehicle_condition > 0 and vehicle_condition lt 10">vehicle_condition=#{vehicle_condition},</if>
                <if test="vehicle_state != null ">vehicle_state=#{vehicle_state},</if>
            </trim>
		WHERE (`vehicle_id`= #{vehicle_id});
	</update>
	
	
	<update id="updataEmployee" parameterType="Employee">
		UPDATE `employee`
			<trim prefix="set" suffixOverrides=",">
                <if test="employee_name != null and employee_name != '' ">employee_name=#{employee_name},</if>
                <if test="employee_phone != null and employee_phone != '' ">employee_phone=#{employee_phone},</if>
            </trim>
		WHERE (`employee_id`= #{employee_id});
	</update>
	
	<!-- /修改 -->
	
</mapper>