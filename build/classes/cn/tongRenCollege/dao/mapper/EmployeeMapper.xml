<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"      
 "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
 
 <mapper namespace="cn.tongRenCollege.dao.mapper.EmployeeMapper">
 	
 	<!-- 增加 -->
 		
 	
 	<!-- /增加 -->
 	
 	<!-- 删除 -->
 	<!-- /删除 -->
 	
 	
 	<!-- 修改 -->
 		<update id="certifyOrder" parameterType="java.util.Date">
 			UPDATE `order` SET `order_state`='实订单' WHERE (`order_id`=#{value})
 		</update>
 		<update id="finishOrder" parameterType="Date">
 			UPDATE `order` SET `order_state`='完成订单', `order_stopDate`=#{arg1}
 			WHERE (`order_id`=#{arg0})
 		</update>
 		<update id="updateOrder" parameterType="Order">
 			UPDATE `order`
 			<trim prefix="set" suffixOverrides=",">
 				<if test="order_vehicle_id != null">
		 			order_vehicle_id=#{order_vehicle_id}, 
 				</if>
 				<if test="order_user_id != null ">
		 			order_user_id=#{order_user_id}, 
 				</if>
 				<if test="order_price !=null and order_price > 0">
		 			order_price=#{order_price}, 
 				</if>
 				<if test="order_state != null ">
		 			order_state=#{order_state}, 
 				</if>
 				<if test="order_startDate != null ">
	 				order_startDate=#{order_startDate}, 
 				</if>
 				<if test="order_stopDate !=null ">
	 				order_stopDate=#{order_stopDate}, 
 				</if>
 				<if test="order_quantity !=null and order_quantity > 0">
		 			order_quantity=#{order_quantity}, 
 				</if>
 			</trim>
 			WHERE (order_id=#{order_id});
 		</update>
 		
 		
 		<update id="ClockInEmployee" parameterType="String">
 			UPDATE `employee` SET `employee_state`='在岗' WHERE (`employee_id`=#{value})
 		</update>
 		<update id="ClockOutEmployee" parameterType="String">
 			UPDATE `employee` SET `employee_state`='下班' WHERE (`employee_id`=#{value})
 		</update>
 		
 	<!-- /修改 -->
 	
 	
 	<!-- 查询 -->
 		
 		<!-- 员工 -->
 		<select id="getEmployee" parameterType="String" resultType="Employee">
 			SELECT * FROM `employee` WHERE (employee_id=#{arg0} AND employee_pwd=#{arg1}) or (employee_phone=#{arg0} and employee_pwd=#{arg1});
 		</select>
 		
 		<!-- 用户 -->
 		<select id="getUserById" parameterType="String" resultType="User">
 			SELECT * FROM `user` WHERE user_id=#{value};
 		</select>
 		<select id="getUserByPhone" parameterType="String" resultType="User">
 			SELECT * FROM `user` WHERE user_phone=#{value};
 		</select>
 		<select id="queryUserByName" parameterType="String" resultType="User">
 			SELECT * FROM `user` WHERE user_name=#{value};
 		</select>
 		
 		<!-- 订单 -->
 		<select id="queryOrders" parameterType="String">
 			SELECT o.* FROM vehicle v INNER JOIN `order` o ON v.vehicle_id=o.order_vehicle_id 
 			WHERE v.vehicle_employee_id=#{value};
 		</select>
 	
 	
 		
 		<select id="queryOrderDetail" parameterType="String"  resultMap="cn.tongRenCollege.dao.mapper.AdmMapper.Orderdetail">
			SELECT * FROM
			(SELECT * FROM
						(SELECT * FROM `order` o INNER JOIN 
						(
							SELECT *  FROM vehicle v INNER JOIN base b ON v.vehicle_base_id=b.base_id
						
						) AS v
						 ON o.order_vehicle_id=v.vehicle_id ) AS vo INNER JOIN `user` u ON u.user_id=vo.order_user_id) 
			AS ovu 
			INNER JOIN employee e
			ON e.employee_id = ovu.vehicle_employee_id WHERE employee_id=#{value}
			ORDER BY order_id DESC;
		</select>
 	
 	
 		<select id="queryOrderDetailTerm" parameterType="Orderdetail"  resultMap="cn.tongRenCollege.dao.mapper.AdmMapper.Orderdetail">
			SELECT * FROM
			(SELECT * FROM
						(SELECT * FROM `order` o INNER JOIN 
						(
							SELECT *  FROM vehicle v INNER JOIN base b ON v.vehicle_base_id=b.base_id
						
						) AS v
						 ON o.order_vehicle_id=v.vehicle_id ) AS vo INNER JOIN `user` u ON u.user_id=vo.order_user_id) 
			AS ovu 
			INNER JOIN employee e
			ON e.employee_id = ovu.vehicle_employee_id 
			<where>
				<if test="order_id != null ">
					and order_id >= #{order_id} ORDER BY order_id ASC
				</if>
				<if test="order_state != null and order_state != '' ">
					and order_state=#{order_state} ORDER BY order_id DESC
				</if>
				<if test="user != null and user.user_name != null and user.user_name != '' ">
					and user_name=#{user.user_name} ORDER BY order_id DESC
				</if>
				<if test="employee != null and employee.employee_name != null and employee.employee_name != '' ">
					and employee_name=#{employee.employee_name} ORDER BY order_id DESC
				</if>
				<if test="employee != null and employee.employee_id != null and employee.employee_id != '' ">
					and employee_id=#{employee.employee_id} ORDER BY order_id DESC
				</if>
			</where>
			;
		</select>
 	
 	
 	
 	
 	
 		<!-- 车辆 -->
 		<select id="getVehicleFullById" parameterType="String"	resultMap="VehicleFull">
				SELECT * FROM `vehicle` v INNER JOIN `base` b ON v.vehicle_base_id=b.base_id WHERE v.vehicle_id=#{value};
		</select>
		<select id="queryVehicleFull" parameterType="VehicleFull" resultMap="VehicleFull">
			SELECT * FROM `vehicle` v INNER JOIN `base` b ON v.vehicle_base_id=b.base_id
			<where>
				<if test="base != null " >
					<if test="base.base_id != null and base.base_id != '' ">
						and b.base_id=#{base.base_id}
					</if>
					<if test="base.base_type != null and base.base_type != '' ">
						and b.base_type=#{base.base_type}
					</if>
					<if test="base.base_brand != null and base.base_brand != '' ">
						and b.base_brand=#{base.base_brand}
					</if>
					<if test="base.base_model != null and base.base_model != '' ">
						and b.base_model=#{base.base_model}
					</if>
					<if test="base.base_produced != null ">
						and b.base_produced=#{base.base_produced}
					</if>
					<if test="base.base_displacement != null and base.base_displacement != 0 ">
						and b.base_displacement=#{base.base_displacement}
					</if>
					<if test="base.base_speed != null and base.base_speed != 0 ">
						and b.base_speed=#{base.base_speed}
					</if>
				</if>
				
				<if test="vehicle_id != null ">
					and v.vehicle_id=#{vehicle_id}
				</if>
				<if test="vehicle_base_id != null ">
					and v.vehicle_base_id=#{vehicle_base_id}
				</if>
				<if test="vehicle_employee_id != null ">
					and v.vehicle_employee_id=#{vehicle_employee_id}
				</if>
				<if test="vehicle_price != null and vehicle_price > 0">
					and v.vehicle_price=#{vehicle_price}
				</if>
				<if test="vehicle_mileage != null and vehicle_mileage > 0">
					and v.vehicle_mileage=#{vehicle_mileage}
				</if>
				<if test="vehicle_condition != null and vehicle_condition > 0 and vehicle_condition lt 10 ">
					and v.vehicle_condition=#{vehicle_condition}
				</if>
				<if test="vehicle_state != null ">
					and v.vehicle_state=#{vehicle_state}
				</if>
			</where>
		</select>
		<select id="queryVehicleFullAll" resultMap="VehicleFull">
			<include refid="cn.tongRenCollege.dao.mapper.AdmMapper.queryVehicleFullAllSql"/>
		</select>
		
		<resultMap type="VehicleFull" id="VehicleFull">
			<id column="vehicle_id" property="vehicle_id"/>
			<result	column="vehicle_base_id" property="vehicle_base_id"/>
			<result	column="vehicle_employee_id" property="vehicle_employee_id"/>
			<result	column="vehicle_price" property="vehicle_price"/>
			<result	column="vehicle_describe" property="vehicle_describe"/>
			<result	column="vehicle_mileage" property="vehicle_mileage"/>
			<result	column="vehicle_condition" property="vehicle_condition"/>
			<result	column="vehicle_state" property="vehicle_state"/>
			<association property="base" javaType="Base">
				<id column="base_id" property="base_id" />
				<result	column="base_photo" property="base_photo"/>
				<result	column="base_type" property="base_type"/>
				<result	column="base_brand" property="base_brand"/>
				<result	column="base_model" property="base_model"/>
				<result	column="base_produced" property="base_produced"/>
				<result	column="base_displacement" property="base_displacement"/>
				<result	column="base_speed" property="base_speed"/>
			</association>
		</resultMap>
 		
 		
 		
 	<!-- /查询 -->
 	
 
 
 </mapper>
 